<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABgLAAAYCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAjwAAAIUAAAAJAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgAAAJASEQj6Dw4H9gAAAHoAAAAGAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIAAACaHRsO/J6WS/+NhUP/EBAI9QAA
        AHYAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVAAAAoiEfEP2mnU//5Nhs/+HV
        a/+JgkH/Dw4H9AAAAHIAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGgAAAKomJBL+rKNS/+TY
        bP/h1Wv/4tVr/+HVa/+Gf0D/Dg0H8wAAAGwAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4AAACyKykU/7Kp
        Vf/k2Gz/4dVr/+HVa//h1Wv/5Nht/8C2W/8jIRH/AAAAugAAABEAAAAEAAAABAAAAAQAAAAEAAAABAAA
        AAQAAAAEAAAABAAAAAMAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAAAuDAu
        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
        AA/gAAAf4AAAD+AAAA/gAAAf8BAAH/AwMD8=
</value>
  </data>
</root>